{"version":3,"sources":["webpack:///./src/components/MessagesDisplay/MessageDisplay.module.css","webpack:///./src/components/MessagesDisplay/MessageDisplay.js","webpack:///./src/components/Dashboard/Dashboard.js"],"names":["module","exports","MessageDisplay","React","Component","constructor","props","super","this","state","messageRetriever","messages","undefined","emojiText","createRef","getAPIurl","componentDidMount","getMessages","messagesInterval","setInterval","componentWillUnmount","clearInterval","console","log","response","fetch","jsonData","json","ok","setState","map","message","localTime","GMTTimeString","timestamp","date","Date","hours","getHours","minutes","getMinutes","toString","length","error","user_nick","text","render","className","style","main_box","color","reverse","index","time","message_box","key","user_image","src","user_image_URL","text_error","autoPlay","type","Dashboard","title"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,SAAW,aAAa,YAAc,aAAa,WAAa,aAAa,UAAY,aAAa,KAAO,aAAa,WAAa,e,iGCG1I,MAAMC,UAAuBC,IAAMC,UAC9CC,YAAYC,GACRC,MAAMD,GAENE,KAAKC,MAAQ,CACTC,iBAAkB,CACdC,cAAUC,IAGlBJ,KAAKK,UAAYV,IAAMW,YAG3BC,YACI,MAAS,0DAMbC,oBACIR,KAAKS,cACLT,KAAKU,iBAAmBC,YAAY,IAAMX,KAAKS,cAAe,KAIlEG,uBACIC,cAAcb,KAAKU,kBAIvB,oBACII,QAAQC,IAAI,oBACZ,IAAIC,QAAiBC,MAAM,2DAE3B,IACI,IAAIC,QAAiBF,EAASG,OAE3BH,EAASI,IACRpB,KAAKqB,SAAS,CACVnB,iBAAkB,CAAEC,SAAUe,EAASf,SAASmB,IAAKC,IACjD,IAAIC,EAEJ,IACI,IAAIC,EAAgBF,EAAQG,UAAY,OACpCC,EAAO,IAAIC,KAAKH,GACpBD,EAAY,CACRK,MAAOF,EAAKG,WACZC,QAAUJ,EAAKK,aAAaC,WAAWC,OAAS,EAAI,IAAIP,EAAKK,aAAaC,WAAaN,EAAKK,cAEnG,MAAMG,GACHrB,QAAQC,IAAI,0FAA2FoB,GAI3G,MAAO,CACH,eAAoC/B,IAAtBmB,EAAQa,UAA0B,GAAIb,EAAQa,UAC5D,UAAyBhC,IAAjBmB,EAAQc,KAAqB,GAAId,EAAQc,KACjD,KAAQb,QAkB3B,MAAMW,GACHrB,QAAQC,IAAI,YAAaoB,IAKjCG,SACI,YAA4ClC,IAAzCJ,KAAKC,MAAMC,iBAAiBC,SAEvB,yBAAKoC,UAAWC,IAAMC,UAClB,wBAAID,MAAO,CAACE,MAAO,SAAnB,mCAA4D,6BAA5D,8CAKR5B,QAAQC,IAAIf,KAAKC,MAAMC,iBAAiBC,UAEpC,yBAAKoC,UAAWC,IAAMC,UAEdzC,KAAKC,MAAMC,iBAAiBC,SAASwC,UAAUrB,IAAI,CAACC,EAASqB,KACzD,IACIC,EADAN,EAAYC,IAAMM,YAAc,IAAMN,IAAMH,KAAO,IAKvD,YAHqBjC,IAAjBmB,EAAQsB,OACRA,EAAOtB,EAAQsB,KAAKhB,MAAQ,IAAMN,EAAQsB,KAAKd,SAG/C,yBAAKgB,IAAKH,EAAOL,UAAWA,GACxB,yBAAKA,UAAWC,IAAMQ,WAAYC,IAAK1B,EAAQ2B,iBAC/C,uBAAGX,UAAWC,IAAMJ,gBAAkChC,IAAtBmB,EAAQa,UAA0B,GAAKb,EAAQa,UAAY,IAA3F,KAAkG,IAAKS,EAAvG,KACA,uBAAGN,WAA8B,IAAlBhB,EAAQY,MAAiBK,IAAMH,KAAOG,IAAMW,YAAa5B,EAAQc,MAChF,2BAAOe,UAAQ,GACX,4BAAQH,IAAI,sDAAsDI,KAAK,qB,qBC/FhGC,UAVG,IAEhB,6BACC,wBAAIf,UAAaC,IAAMe,OAAvB,wBACA,kBAAC,EAAD","file":"js/Dashboard.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_box\":\"dev--1YbZ_\",\"message_box\":\"dev--dXVGK\",\"user_image\":\"dev--16GhC\",\"user_nick\":\"dev--1DQ5J\",\"text\":\"dev--hu8U1\",\"text_error\":\"dev--3VEJR\"};","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport style from './MessageDisplay.module.css';\r\n\r\nexport default class MessageDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            messageRetriever: {\r\n                messages: undefined\r\n            }\r\n        }\r\n        this.emojiText = React.createRef();\r\n    }\r\n\r\n    getAPIurl() {\r\n        return ( // this.props.APIURL !== undefined ? this.props.APIURL :\r\n            'https://backend.virtualium.ethernity.live/message/topic'\r\n        )\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getMessages();\r\n        this.messagesInterval = setInterval(() => this.getMessages(), 2000);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.messagesInterval);\r\n    }\r\n\r\n    // this method fetch the messages from the URL\r\n    async getMessages() {\r\n        console.log(\"fetching data...\");\r\n        let response = await fetch('https://backend.virtualium.ethernity.live/message/topic');\r\n\r\n        try{\r\n            let jsonData = await response.json();\r\n            \r\n            if(response.ok){\r\n                this.setState({\r\n                    messageRetriever: { messages: jsonData.messages.map((message)=>{ //for each message in the jsonData\r\n                        let localTime;\r\n\r\n                        try{\r\n                            let GMTTimeString = message.timestamp + \" GMT\";\r\n                            let date = new Date(GMTTimeString);\r\n                            localTime = {\r\n                                hours: date.getHours(),\r\n                                minutes: (date.getMinutes().toString().length < 2 ? '0'+date.getMinutes().toString() : date.getMinutes())\r\n                            }\r\n                        }catch(error){\r\n                            console.log(\"Date couldn't be fetched somehow, from the json (maybe the date wasn't sent), details: \", error);\r\n                        }\r\n                        \r\n\r\n                        return {\r\n                            \"user_nick\": (message.user_nick === undefined ? '': message.user_nick),\r\n                            \"text\": message.text === undefined ? '': message.text,\r\n                            \"time\": localTime\r\n                        };\r\n                    })}\r\n                }); \r\n            }\r\n            // else{\r\n                    \r\n            //     this.setState(  {\r\n            //         messageRetriever: {messages:[\r\n            //             {\r\n            //                 user_nick: \"Server_side\",\r\n            //                 text:\"Error 404\",\r\n            //                 error: true\r\n            //             }\r\n            //         ]\r\n            //     }})\r\n            // }\r\n            \r\n        }catch(error){\r\n            console.log(\"Error... \", error);\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.messageRetriever.messages === undefined){\r\n            return(\r\n                <div className={style.main_box}>\r\n                    <h3 style={{color: \"grey\"}}>No se encontró ningún mensaje...<br/>Pero no te preocupes, llegarán pronto!!!</h3>\r\n                </div>\r\n            )\r\n        }else{\r\n\r\n            console.log(this.state.messageRetriever.messages);\r\n            return (\r\n                <div className={style.main_box}>\r\n                    {\r\n                        this.state.messageRetriever.messages.reverse().map((message, index) => { //for each message received in the fetching\r\n                            let className = style.message_box + \" \" + style.text + \" \"; //first, is going to define the default classes for it\r\n                            let time;\r\n                            if (message.time !== undefined){\r\n                                time = message.time.hours + \":\" + message.time.minutes\r\n                            }\r\n                            return (\r\n                                <div key={index} className={className}>\r\n                                    <img className={style.user_image} src={message.user_image_URL} />\r\n                                    <p className={style.user_nick}>{message.user_nick === undefined ? \"\" : message.user_nick + \" \"}at{\" \"+ time} </p>\r\n                                    <p className={ message.error !== true ? style.text : style.text_error}>{message.text}</p>\r\n                                    <audio autoPlay>\r\n                                        <source src=\"https://backend.virtualium.ethernity.live/get_sound\" type=\"audio/wav\"></source>\r\n                                    </audio>\r\n                                </div>\r\n                            ) //returns the message with all the classes\r\n                            //and content setup.\r\n\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport MessageDisplay from \"../MessagesDisplay/MessageDisplay.js\";\r\n/* style */\r\nimport style from './dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<h4 className = {style.title}>Mensajes del público</h4>\r\n\t\t\t<MessageDisplay />\r\n\t\t\t\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dashboard;"],"sourceRoot":""}